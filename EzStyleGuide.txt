Approved 11/14/2024

All Ez things in the global namespace must begin with the letters "Ez".
EzHelper not Helper

All Ez things not in the global namespace do not require the letters "Ez".
EzError::ThrowFromCode not EzError::EzThrowFromCode

Do not place anything in the Ez namespace.
EzError not Ez::Error

All header files in Ez must refrence Windows.h and use its functions where possible.
So add #include <Windows.h> and then use it

All cpp files in Ez must refrence the associated header and each .h file must come paired with exactly one .cpp file with the same name.
The only exception to this is dangling .h files where the header contains all the code and there is no need for a .cpp file.

Use LPSTR, LPWSTR, LPCSTR, and LPCWSTR for strings. Do not use char* or wchar_t*.

Use CHAR, and WCHAR for characters. Do not use char or wchar_t.

Use void instead of VOID.

Use BOOL instead of BOOLEAN or bool.

Use FALSE or TRUE instead of false or true.

Use BYTE, instead of char.

Use BYTE* instead of LPBYTE, use void* instead of LPVOID, and use DWORD* instead of LPDWORD.

Use INT, UINT32, or others instead of DWORD, int, long long, unsigned int or others.
The only time it's okay to use DWORD is to match the signature of a system api which takes in or returns a DWORD.

Use NULL, instead of nullptr or 0.

When calling Windows functions hardcode the A vs W version instead of using the macro.
FormatMessageW or FormatMessageA not FormatMessage

Any functions which take in strings must have an A and W version as well as a UNICODE macro in the header file to make their usage easier.

Include statements which can be moved from the .h header to the .cpp source file should be.

Always include #pragma once in each header file.

If a #include statement can be removed then it should be.